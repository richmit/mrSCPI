var search_data = {"index":{"searchIndex":["printyprintybangbang","scpircfile","scpiregexlibrary","scpisequence","scpisession","a()","add()","close()","command()","execute()","execute()","expand()","logprinter()","lookupnetwork()","lookupurlnickname()","new()","new()","new()","new()","new()","outprinter()","result()","set()","set()","u()","urlparser()","validoptions()","variable()","mrscpi"],"longSearchIndex":["printyprintybangbang","scpircfile","scpiregexlibrary","scpisequence","scpisession","scpiregexlibrary#a()","scpisequence#add()","printyprintybangbang#close()","scpisession#command()","scpisequence#execute()","scpisession#execute()","scpisession#expand()","printyprintybangbang#logprinter()","scpircfile#lookupnetwork()","scpircfile#lookupurlnickname()","printyprintybangbang::new()","scpircfile::new()","scpiregexlibrary::new()","scpisequence::new()","scpisession::new()","printyprintybangbang#outprinter()","scpisession#result()","printyprintybangbang#set()","scpisession#set()","scpiregexlibrary#u()","scpircfile#urlparser()","printyprintybangbang#validoptions()","scpisession#variable()",""],"info":[["PrintyPrintyBangBang","","PrintyPrintyBangBang.html","","<p>Introduction\n<p>PrintyPrintyBangBang is a funny little class designed to do two things:\n<p><p>PrintyPrinty &mdash; Print …\n"],["SCPIrcFile","","SCPIrcFile.html","","<p>Introduction\n<p>SCPIrcFile provides access to data housed in the mrSCPI RC file found at <code>$HOME/.mrSCPIrc</code> …\n"],["SCPIregexLibrary","","SCPIregexLibrary.html","","<p>Introduction\n<p>SCPIregexLibrary provides access to regular expressions used across mrSCPI.  Many of them …\n"],["SCPIsequence","","SCPIsequence.html","","<p>Introduction\n<p>SCPIsequence is essentially a container for an ordered sequence of SCPIsession options (added …\n"],["SCPIsession","","SCPIsession.html","","<p>Introduction\n<p>SCPIsession manages network connections and connection state for SPCI sessions.\n<p>SCPIsession …\n"],["a","SCPIregexLibrary","SCPIregexLibrary.html#method-i-a","(aSymb)","<p>Returns regexp with the default anchors.  Returns <code>nil</code> if no regexp found.\n"],["add","SCPIsequence","SCPIsequence.html#method-i-add","(property, value)","<p>Return true if property is valid, and nil if not – note :execute_on_cmd is not allowed\n"],["close","PrintyPrintyBangBang","PrintyPrintyBangBang.html#method-i-close","()","<p>Close all open files except <code>STDERR</code>, <code>STDOUT</code>, &amp; <code>/dev/null</code>. Sets <code>@gblOpt[:log_file]</code> to <code>&#39;STDERR&#39;</code> …\n"],["command","SCPIsession","SCPIsession.html#method-i-command","(cmd, options=nil)","<p>While <code>.set</code> perfectly capable of setting the <code>:cmd</code> parameter, this method provides provides a more readable …\n"],["execute","SCPIsequence","SCPIsequence.html#method-i-execute","()","<p>Execute the sequence of stored parameters\n"],["execute","SCPIsession","SCPIsession.html#method-i-execute","()","<p>This method executes the command specified by the <code>:cmd</code> parameter.  This is method is completely unnecessary …\n"],["expand","SCPIsession","SCPIsession.html#method-i-expand","(instr)","<p>Return a new string with constructs like ${variable_name} &amp; ${variable_name:default_value} expanded …\n"],["logPrinter","PrintyPrintyBangBang","PrintyPrintyBangBang.html#method-i-logPrinter","(level, msg, source, exitCode=nil)","<p>Print a message to <code>@gblOpt[:log_file]</code>\n<p><p><code>level</code> &mdash; An integer.  If <code>@gblOpt[:verbose]&gt;=level</code>, then the message …\n\n"],["lookupNetwork","SCPIrcFile","SCPIrcFile.html#method-i-lookupNetwork","(ip_address=nil)","<p>Find a network in the RC file that contains the given <code>ip_address</code>. If <code>ip_address</code> is <code>nil</code>, then the IP addresses …\n"],["lookupURLnickname","SCPIrcFile","SCPIrcFile.html#method-i-lookupURLnickname","(nicknameString)","<p>Helper function to lookup instrument nicknames to URLs.  The <code>nicknameString</code> can take one of three forms: …\n"],["new","PrintyPrintyBangBang","PrintyPrintyBangBang.html#method-c-new","()",""],["new","SCPIrcFile","SCPIrcFile.html#method-c-new","()",""],["new","SCPIregexLibrary","SCPIregexLibrary.html#method-c-new","()",""],["new","SCPIsequence","SCPIsequence.html#method-c-new","(convertStrings=nil)",""],["new","SCPIsession","SCPIsession.html#method-c-new","(options)",""],["outPrinter","PrintyPrintyBangBang","PrintyPrintyBangBang.html#method-i-outPrinter","(msg, newline=true)","<p>Print a message to <code>@gblOpt[:out_file]</code>\n<p><p><code>newline</code> &mdash; If non-<code>nil</code>, then <code>puts</code> will be used.  Otherwise <code>write</code> is …\n\n\n"],["result","SCPIsession","SCPIsession.html#method-i-result","(index: -1, type: :ret_val)","<p>After execution SCPI commands have several data elements stored, and this method provides access to that …\n"],["set","PrintyPrintyBangBang","PrintyPrintyBangBang.html#method-i-set","(options)","<p>Set options in <code>@gblOpt</code>.  Possible options:\n<p><p><code>:log_file</code> &mdash; \n<p><p><code>:out_file</code> &mdash; \n<p><p><code>:verbose</code> &mdash; \n<p><p><code>:exit_0</code> &mdash; \n<p><p><code>:exit_on_error</code> &mdash; \n<p><p><code>:print_max_len</code> … &mdash; \n"],["set","SCPIsession","SCPIsession.html#method-i-set","(options=Hash.new)","<p>Set state parameters – see the parameter list in the main documentation for the SCPIsession class.\n"],["u","SCPIregexLibrary","SCPIregexLibrary.html#method-i-u","(aSymb)","<p>Returns a regexp with no anchors.  Returns <code>nil</code> if no regexp found.\n"],["urlParser","SCPIrcFile","SCPIrcFile.html#method-i-urlParser","(urlString)","<p>Parse URLs.  Lookup nicknames if requried.  Return nil if urlString is invalid and a hash otherwise\n"],["validOptions","PrintyPrintyBangBang","PrintyPrintyBangBang.html#method-i-validOptions","()","<p>Return an array of valid option keys.\n<p>This is used by SCPIsession to forward options to the global PrintyPrintyBangBang …\n"],["variable","SCPIsession","SCPIsession.html#method-i-variable","(name, value=nil)","<p>Access, or set when <code>value</code> is non-<code>nil</code>, a SCPIsession variable.\n"],["mrSCPI","","src/mrSCPI_rdoc.html","","<p><code>mrSCPI</code>\n<p>For a brief overview of <code>mrSCPI</code>, check out the readme\n"]]}}